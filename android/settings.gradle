// ---- MUST be first so Gradle knows where to find plugins (incl. Expo) ----
pluginManagement {
  repositories {
    gradlePluginPortal()
    google()
    mavenCentral()
  }
}

// Must stay near the top (after pluginManagement)
def expoDir = new File(
  ["node", "--print", "require.resolve('expo/package.json')"]
    .execute(null, rootDir).text.trim()
).getParentFile()

apply from: new File(expoDir, "scripts/autolinking.gradle")
useExpoModules()

rootProject.name = 'PicklePro'

// Centralize dependency repositories for all projects
dependencyResolutionManagement {
  repositories {
    google()
    mavenCentral()
  }
  versionCatalogs {
    reactAndroidLibs {
      from(files(new File(
        ["node", "--print", "require.resolve('react-native/package.json')"]
          .execute(null, rootDir).text.trim(),
        "../gradle/libs.versions.toml"
      )))
    }
  }
}

// React Nativeâ€™s Gradle plugin includeBuild & native modules autolinking
apply from: new File(
  ["node", "--print", "require.resolve('@react-native-community/cli-platform-android/package.json', { paths: [require.resolve('react-native/package.json')] })"]
    .execute(null, rootDir).text.trim(), "../native_modules.gradle"
)
applyNativeModulesSettingsGradle(settings)

include ':app'

// Include the RN Gradle plugin build
includeBuild(new File(
  ["node", "--print", "require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })"]
    .execute(null, rootDir).text.trim()
).getParentFile())
